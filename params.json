{"name":"Consul4","tagline":"some about registrator questions","body":"`在使用Regastrator过程中遇到的问题：    `\r\n\r\n首先简单介绍一下Registrator是什么：\r\n====\r\n    Registrator是一个可以监听通过docker启动服务，并且可以自动注册和注销该服务。并且目前支持\r\n    Consul, etcd and SkyDNS2相关服务注册组件。        \r\n\r\n我在使用的过程中是使用的`cosnul`.         \r\n\r\n实验过程中遇到的问题： \r\n====\r\n* (1).当通过docker启动registrator 时， 给registrator的启动参数-internal=0（default）此时registrator注册\r\n的服务的ip都是该registrator的容器的ip.    \r\n\r\n* (2).当通过docker启动registrator 时，给定docker指定网络参数--net=host,此时会注册到consul上服务的ip全部\r\n都是127.0.1.1，原因是由于使用了host模式和本机使用相同的ip和port（处于同一个network空间）。            \r\n\r\n\r\n* (3).要想registrator注册到consul上的服务的ip是每一个服务容器的ip，则可以指定registrator的执行参数\r\n-internal=1.此时注册到cosnul上的服务的ip就是每每一个服务容器的ip,注意并且此时注册服务的port也不再\r\n是启动时给的映射port,而是其容器服务暴露的端口．\r\n\r\n\r\n* (4).如果我们想利用conusl+registrator+docker+consul_template来动态管理nginx则可以这样设计：\r\nconsul_templaye + regsitrator应该和要上线的服务打包到需要部署的机器上，而且此时使用--net=host\r\n网络模式启动docker上的registrator，此时只需要启动服务的时候进行端口的映射就好了。        \r\n\r\n\r\n* (5).当docker使用默认网络模式，则port是指定的映射端口。 映射端口和docker的网络模式是没有关系\r\n的（registrator的网络模式）。但是当registrator使用了internal=1\r\n的时候则此时所注册的服务的端口默认是80.当启动服务时-p 88:8000  则会在consul注册两个服务，\r\n一个是80一个是8000.         \r\n\r\n\r\n### 上面的我场景的原因:      \r\n    有可能是在该dockerfile中没有暴露了端口（EXPOSE  80 ） 而且本身有一个服务是8000端口。而且初步猜测registrator会检测所有暴露的端口认为就是有可用的服务。\r\n    而且当使用-p  88:99是会出现88端口这个服务，看了下docker文档(建议看一下EXPOSE和-p以及-P他们之间的区别)，使用-p的时候会执行暴露端口以及做端口映射。\r\n\r\n###一句话来说就是：  \r\n    所有发布了的端口（-p或-P）都会暴露，但是暴露了的端口（EXPOSE）不一定会发布。      \r\n\r\n\r\n欢迎一起交流学习 \r\n====\r\n \r\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\r\n\r\n* 邮件(1031379296#qq.com, 把#换成@)\r\n* QQ: 1031379296\r\n* weibo: [@王发康](http://weibo.com/u/2786211992/home)\r\n\r\n\r\nThx\r\n====\r\n\r\n* chunshengsterATgmail.com\r\n\r\n\r\nAuthor\r\n====\r\n* Linux\\nginx\\golang\\c\\c++爱好者\r\n* 欢迎一起交流  一起学习# \r\n* Others say good and Others good\r\n\r\n\r\n","google":"Registrator questions  consul service ip different","note":"Don't delete this file! It's used internally to help with page regeneration."}